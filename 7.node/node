一、Node.js的优点
1)	异步非阻塞的I/O（I/O线程池）
2)	特别适用于I/O密集型应用（对比传统java服务器）
3)	事件循环机制（独有一套，与浏览器不一样）
4)	单线程（成也单线程，败也单线程）
5)	跨平台（几乎常见的语言都支持）

I：input  
O：output

I/O操作：input写，output读

演化：
I/O操作：
  文件读写：input写，output读
  数据读写：数据库的操作 读与写

同步阻塞的I/O
异步非阻塞的I/O
[I/O线程]池

单线程运行的“东西”，如果想实现“异步”，就必须有自己的“事件循环模型”。

二、Node.js的不足之处
1) 回调函数嵌套太多、太深 ，俗称回调地域
2) 单线程，处理不好CPU 密集型任务

java：I/O密集型
客户端 → 服务器 → 数据库
客人 → 餐厅 → 后厨
餐厅的服务员一对一服务，随时听客人等候，或者等后厨通知菜做好了
如果有100人来吃饭，就要100个服务员到位，java服务器专人专用
特点：多进程、多线程

Node：CPU密集型
优点：需要过多的判断，要做的事情，不明确
客户端 → 服务器 → 数据库
客人 → 餐厅 → 后厨
餐厅服务员只要一个，同时接待很多客人
很多人一下子来点菜，服务员应付不过来

三、npm包管理
1) npm i xxx      默认安装，生产依赖
2) npm i xxx -D   开发依赖
3) npm i xxx -g   全局安装，管理员权限，带有指令集的包要进行全局安装
4) npm i xxx@yyy  安装xxx包的yyy版本
5) npm i          安装package.json中声明的所有包
6) npm remove xxx 在node_module中删除xxx包，同时会删除该包在package.json中的声明
7) npm view xxxxx versions 查看远程npm仓库中xxxx包的所有版本信息
8) npm ls xxxx 查看我们所安装的xxxx包的版本
